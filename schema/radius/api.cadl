import "./application.cadl";
import "./container.cadl";
import "./http-route.cadl";
import "./decorators.js";

import "@cadl-lang/openapi3";
import "@cadl-lang/rest";

using Cadl.Http;
using Cadl.Rest;
using Cadl.Rest.Resource;

interface ResourceRestApi<T> {
    @autoRoute
    @listsResource(T)
    list(@path applicationName: string): OkResponse<T[]> | ErrorBody;
    
    @autoRoute
    @readsResource(T)
    get(@path applicationName: string, @path resourceName: string): OkResponse<T> | ErrorBody;
    
    @autoRoute
    @deletesResource(T)
    delete(@path applicationName: string, @path resourceName: string): NoContentResponse | ErrorBody;
    
    @autoRoute
    @createsOrUpdatesResource(T)
    put(@path applicationName: string, @body resource: T): OkResponse<T> | ErrorBody;
}

model ErrorBody {
}

@autoRoute
namespace Radius {
    // interface Applications {
    //     //@autoRoute
    //     @listsResource(Application) 
    //     list(): OkResponse<Application[]> | ErrorBody;
        
    //     //@autoRoute
    //     @readsResource(Application)
    //     get(@path applicationName: string): OkResponse<Application> | ErrorBody;
        
    //     //@autoRoute
    //     @deletesResource(Application)
    //     delete(@path applicationName: string): NoContentResponse | ErrorBody;
        
    //     //@autoRoute
    //     @createsOrUpdatesResource(Application)
    //     put(@body application: Application): OkResponse<Application> | ErrorBody;
    // }

    interface Applications mixes ResourceOperations<Application, ErrorBody>{}
    interface Containers mixes ResourceOperations<Container, ErrorBody>{}
    interface HttpRoutes mixes ResourceOperations<HttpRoute, ErrorBody>{}
}